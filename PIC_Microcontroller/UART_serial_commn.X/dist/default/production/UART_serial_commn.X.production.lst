

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu Dec 15 14:00:29 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    15                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    16                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    17                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    18   000000                     
    19                           ; Version 2.40
    20                           ; Generated 17/11/2021 GMT
    21                           ; 
    22                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution. Publication is not required when
    36                           ;        this file is used in an embedded application.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC18F4520 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54   000000                     
    55                           	psect	idataCOMRAM
    56   006F2E                     __pidataCOMRAM:
    57                           	callstack 0
    58                           
    59                           ;initializer for main@F2578
    60   006F2E  79                 	db	121
    61   006F2F  65                 	db	101
    62   006F30  73                 	db	115
    63   006F31  20                 	db	32
    64   006F32  69                 	db	105
    65   006F33  74                 	db	116
    66   006F34  73                 	db	115
    67   006F35  20                 	db	32
    68   006F36  77                 	db	119
    69   006F37  6F                 	db	111
    70   006F38  72                 	db	114
    71   006F39  6B                 	db	107
    72   006F3A  69                 	db	105
    73   006F3B  6E                 	db	110
    74   006F3C  67                 	db	103
    75   006F3D  0D                 	db	13
    76   006F3E  00                 	db	0
    77                           
    78                           ;initializer for main@F2576
    79   006F3F  74                 	db	116
    80   006F40  65                 	db	101
    81   006F41  73                 	db	115
    82   006F42  74                 	db	116
    83   006F43  69                 	db	105
    84   006F44  6E                 	db	110
    85   006F45  67                 	db	103
    86   006F46  20                 	db	32
    87   006F47  6F                 	db	111
    88   006F48  66                 	db	102
    89   006F49  20                 	db	32
    90   006F4A  75                 	db	117
    91   006F4B  61                 	db	97
    92   006F4C  72                 	db	114
    93   006F4D  74                 	db	116
    94   006F4E  0D                 	db	13
    95   006F4F  00                 	db	0
    96   000000                     _RCREG	set	4014
    97   000000                     _TXREG	set	4013
    98   000000                     _SPBRG	set	4015
    99   000000                     _BAUDCON	set	4024
   100   000000                     _TRISCbits	set	3988
   101   000000                     _RCSTAbits	set	4011
   102   000000                     _TXSTAbits	set	4012
   103   000000                     _SPBRGH	set	4016
   104   000000                     _PIR1bits	set	3998
   105                           
   106                           ; #config settings
   107                           
   108                           	psect	cinit
   109   006F50                     __pcinit:
   110                           	callstack 0
   111   006F50                     start_initialization:
   112                           	callstack 0
   113   006F50                     __initialization:
   114                           	callstack 0
   115                           
   116                           ; Initialize objects allocated to COMRAM (34 bytes)
   117                           ; load TBLPTR registers with __pidataCOMRAM
   118   006F50  0E2E               	movlw	low __pidataCOMRAM
   119   006F52  6EF6               	movwf	tblptrl,c
   120   006F54  0E6F               	movlw	high __pidataCOMRAM
   121   006F56  6EF7               	movwf	tblptrh,c
   122   006F58  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   123   006F5A  6EF8               	movwf	tblptru,c
   124   006F5C  EE00  F027         	lfsr	0,__pdataCOMRAM
   125   006F60  EE10 F022          	lfsr	1,34
   126   006F64                     copy_data0:
   127   006F64  0009               	tblrd		*+
   128   006F66  CFF5 FFEE          	movff	tablat,postinc0
   129   006F6A  50E5               	movf	postdec1,w,c
   130   006F6C  50E1               	movf	fsr1l,w,c
   131   006F6E  E1FA               	bnz	copy_data0
   132   006F70                     end_of_initialization:
   133                           	callstack 0
   134   006F70                     __end_of__initialization:
   135                           	callstack 0
   136   006F70  0100               	movlb	0
   137   006F72  EFD3  F037         	goto	_main	;jump to C main() function
   138                           
   139                           	psect	dataCOMRAM
   140   000027                     __pdataCOMRAM:
   141                           	callstack 0
   142   000027                     main@F2578:
   143                           	callstack 0
   144   000027                     	ds	17
   145   000038                     main@F2576:
   146                           	callstack 0
   147   000038                     	ds	17
   148                           
   149                           	psect	cstackCOMRAM
   150   000001                     __pcstackCOMRAM:
   151                           	callstack 0
   152   000001                     tx_data@data:
   153                           	callstack 0
   154                           
   155                           ; 1 bytes @ 0x0
   156   000001                     	ds	1
   157   000002                     tx_string@ptr:
   158                           	callstack 0
   159                           
   160                           ; 2 bytes @ 0x1
   161   000002                     	ds	2
   162   000004                     main@msg1:
   163                           	callstack 0
   164                           
   165                           ; 17 bytes @ 0x3
   166   000004                     	ds	17
   167   000015                     main@msg2:
   168                           	callstack 0
   169                           
   170                           ; 17 bytes @ 0x14
   171   000015                     	ds	17
   172   000026                     main@received_data:
   173                           	callstack 0
   174                           
   175                           ; 1 bytes @ 0x25
   176   000026                     	ds	1
   177                           
   178 ;;
   179 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   180 ;;
   181 ;; *************** function _main *****************
   182 ;; Defined at:
   183 ;;		line 42 in file "uart_serial_commn.c"
   184 ;; Parameters:    Size  Location     Type
   185 ;;		None
   186 ;; Auto vars:     Size  Location     Type
   187 ;;  msg2           17   20[COMRAM] unsigned char [17]
   188 ;;  msg1           17    3[COMRAM] unsigned char [17]
   189 ;;  received_dat    1   37[COMRAM] unsigned char 
   190 ;;  data            1    0        unsigned char 
   191 ;; Return value:  Size  Location     Type
   192 ;;                  1    wreg      void 
   193 ;; Registers used:
   194 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   195 ;; Tracked objects:
   196 ;;		On entry : 0/0
   197 ;;		On exit  : 0/0
   198 ;;		Unchanged: 0/0
   199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   200 ;;      Params:         0       0       0       0       0       0       0
   201 ;;      Locals:        35       0       0       0       0       0       0
   202 ;;      Temps:          0       0       0       0       0       0       0
   203 ;;      Totals:        35       0       0       0       0       0       0
   204 ;;Total ram usage:       35 bytes
   205 ;; Hardware stack levels required when called: 2
   206 ;; This function calls:
   207 ;;		_rx_data
   208 ;;		_tx_data
   209 ;;		_tx_string
   210 ;;		_uart_init
   211 ;; This function is called by:
   212 ;;		Startup code after reset
   213 ;; This function uses a non-reentrant model
   214 ;;
   215                           
   216                           	psect	text0
   217   006FA6                     __ptext0:
   218                           	callstack 0
   219   006FA6                     _main:
   220                           	callstack 29
   221   006FA6                     
   222                           ;uart_serial_commn.c: 44:     unsigned char msg1[]="testing of uart\r";
   223   006FA6  EE20  F038         	lfsr	2,main@F2576
   224   006FAA  EE10  F004         	lfsr	1,main@msg1
   225   006FAE  0E10               	movlw	16
   226   006FB0                     u71:
   227   006FB0  CFDB FFE3          	movff	plusw2,plusw1
   228   006FB4  06E8               	decf	wreg,f,c
   229   006FB6  E2FC               	bc	u71
   230   006FB8                     
   231                           ;uart_serial_commn.c: 45:     unsigned char msg2[]="yes its working\r";
   232   006FB8  EE20  F027         	lfsr	2,main@F2578
   233   006FBC  EE10  F015         	lfsr	1,main@msg2
   234   006FC0  0E10               	movlw	16
   235   006FC2                     u81:
   236   006FC2  CFDB FFE3          	movff	plusw2,plusw1
   237   006FC6  06E8               	decf	wreg,f,c
   238   006FC8  E2FC               	bc	u81
   239   006FCA                     
   240                           ;uart_serial_commn.c: 47:     uart_init();
   241   006FCA  EC87  F037         	call	_uart_init	;wreg free
   242   006FCE                     
   243                           ;uart_serial_commn.c: 49:     tx_data(data);
   244   006FCE  0E41               	movlw	65
   245   006FD0  EC7C  F037         	call	_tx_data
   246   006FD4                     
   247                           ;uart_serial_commn.c: 50:     tx_string(msg1);
   248   006FD4  0E04               	movlw	low main@msg1
   249   006FD6  6E02               	movwf	tx_string@ptr^0,c
   250   006FD8  0E00               	movlw	high main@msg1
   251   006FDA  6E03               	movwf	(tx_string@ptr+1)^0,c
   252   006FDC  ECBB  F037         	call	_tx_string	;wreg free
   253   006FE0                     
   254                           ;uart_serial_commn.c: 51:     tx_string(msg2);
   255   006FE0  0E15               	movlw	low main@msg2
   256   006FE2  6E02               	movwf	tx_string@ptr^0,c
   257   006FE4  0E00               	movlw	high main@msg2
   258   006FE6  6E03               	movwf	(tx_string@ptr+1)^0,c
   259   006FE8  ECBB  F037         	call	_tx_string	;wreg free
   260   006FEC                     
   261                           ;uart_serial_commn.c: 52:     received_data=rx_data();
   262   006FEC  EC72  F037         	call	_rx_data	;wreg free
   263   006FF0  6E26               	movwf	main@received_data^0,c
   264   006FF2                     
   265                           ;uart_serial_commn.c: 53:     tx_data(received_data);
   266   006FF2  5026               	movf	main@received_data^0,w,c
   267   006FF4  EC7C  F037         	call	_tx_data
   268   006FF8                     l48:
   269   006FF8  EFFC  F037         	goto	l48
   270   006FFC  EF00  F000         	goto	start
   271   007000                     __end_of_main:
   272                           	callstack 0
   273                           
   274 ;; *************** function _uart_init *****************
   275 ;; Defined at:
   276 ;;		line 4 in file "uart_serial_commn.c"
   277 ;; Parameters:    Size  Location     Type
   278 ;;		None
   279 ;; Auto vars:     Size  Location     Type
   280 ;;		None
   281 ;; Return value:  Size  Location     Type
   282 ;;                  2   20[None  ] int 
   283 ;; Registers used:
   284 ;;		wreg, status,2
   285 ;; Tracked objects:
   286 ;;		On entry : 0/0
   287 ;;		On exit  : 0/0
   288 ;;		Unchanged: 0/0
   289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   290 ;;      Params:         0       0       0       0       0       0       0
   291 ;;      Locals:         0       0       0       0       0       0       0
   292 ;;      Temps:          0       0       0       0       0       0       0
   293 ;;      Totals:         0       0       0       0       0       0       0
   294 ;;Total ram usage:        0 bytes
   295 ;; Hardware stack levels used: 1
   296 ;; This function calls:
   297 ;;		Nothing
   298 ;; This function is called by:
   299 ;;		_main
   300 ;; This function uses a non-reentrant model
   301 ;;
   302                           
   303                           	psect	text1
   304   006F0E                     __ptext1:
   305                           	callstack 0
   306   006F0E                     _uart_init:
   307                           	callstack 30
   308   006F0E                     
   309                           ;uart_serial_commn.c: 6:    TXSTAbits.SYNC =0;
   310   006F0E  98AC               	bcf	172,4,c	;volatile
   311                           
   312                           ;uart_serial_commn.c: 7:    TXSTAbits.TX9 = 0;
   313   006F10  9CAC               	bcf	172,6,c	;volatile
   314                           
   315                           ;uart_serial_commn.c: 8:    TXSTAbits.TXEN = 1;
   316   006F12  8AAC               	bsf	172,5,c	;volatile
   317                           
   318                           ;uart_serial_commn.c: 9:    TXSTAbits.BRGH = 1;
   319   006F14  84AC               	bsf	172,2,c	;volatile
   320                           
   321                           ;uart_serial_commn.c: 11:    RCSTAbits.CREN = 1 ;
   322   006F16  88AB               	bsf	171,4,c	;volatile
   323                           
   324                           ;uart_serial_commn.c: 12:    RCSTAbits.RX9 = 0;
   325   006F18  9CAB               	bcf	171,6,c	;volatile
   326                           
   327                           ;uart_serial_commn.c: 13:    RCSTAbits.SPEN = 1;
   328   006F1A  8EAB               	bsf	171,7,c	;volatile
   329   006F1C                     
   330                           ;uart_serial_commn.c: 15:    BAUDCON = 0x00;
   331   006F1C  0E00               	movlw	0
   332   006F1E  6EB8               	movwf	184,c	;volatile
   333                           
   334                           ;uart_serial_commn.c: 16:    SPBRG = 129;
   335   006F20  0E81               	movlw	129
   336   006F22  6EAF               	movwf	175,c	;volatile
   337                           
   338                           ;uart_serial_commn.c: 17:    SPBRGH = 0;
   339   006F24  0E00               	movlw	0
   340   006F26  6EB0               	movwf	176,c	;volatile
   341   006F28                     
   342                           ;uart_serial_commn.c: 18:    TRISCbits.RC6 = 0;
   343   006F28  9C94               	bcf	148,6,c	;volatile
   344   006F2A                     
   345                           ;uart_serial_commn.c: 19:    TRISCbits.RC7 = 1;
   346   006F2A  8E94               	bsf	148,7,c	;volatile
   347   006F2C  0012               	return		;funcret
   348   006F2E                     __end_of_uart_init:
   349                           	callstack 0
   350                           
   351 ;; *************** function _tx_string *****************
   352 ;; Defined at:
   353 ;;		line 34 in file "uart_serial_commn.c"
   354 ;; Parameters:    Size  Location     Type
   355 ;;  ptr             2    1[COMRAM] PTR unsigned char 
   356 ;;		 -> main@msg2(17), main@msg1(17), 
   357 ;; Auto vars:     Size  Location     Type
   358 ;;		None
   359 ;; Return value:  Size  Location     Type
   360 ;;                  1    wreg      void 
   361 ;; Registers used:
   362 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   363 ;; Tracked objects:
   364 ;;		On entry : 0/0
   365 ;;		On exit  : 0/0
   366 ;;		Unchanged: 0/0
   367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   368 ;;      Params:         2       0       0       0       0       0       0
   369 ;;      Locals:         0       0       0       0       0       0       0
   370 ;;      Temps:          0       0       0       0       0       0       0
   371 ;;      Totals:         2       0       0       0       0       0       0
   372 ;;Total ram usage:        2 bytes
   373 ;; Hardware stack levels used: 1
   374 ;; Hardware stack levels required when called: 1
   375 ;; This function calls:
   376 ;;		_tx_data
   377 ;; This function is called by:
   378 ;;		_main
   379 ;; This function uses a non-reentrant model
   380 ;;
   381                           
   382                           	psect	text2
   383   006F76                     __ptext2:
   384                           	callstack 0
   385   006F76                     _tx_string:
   386                           	callstack 29
   387   006F76                     
   388                           ;uart_serial_commn.c: 34: void tx_string(unsigned char *ptr);uart_serial_commn.c: 35: {;
      +                          uart_serial_commn.c: 36:     while(*ptr!=0)
   389   006F76  EFC6  F037         	goto	l777
   390   006F7A                     l773:
   391                           
   392                           ;uart_serial_commn.c: 37:     {;uart_serial_commn.c: 38:         tx_data(*ptr);
   393   006F7A  C002  FFD9         	movff	tx_string@ptr,fsr2l
   394   006F7E  C003  FFDA         	movff	tx_string@ptr+1,fsr2h
   395   006F82  50DF               	movf	indf2,w,c
   396   006F84  EC7C  F037         	call	_tx_data
   397   006F88                     
   398                           ;uart_serial_commn.c: 39:         ptr++;
   399   006F88  4A02               	infsnz	tx_string@ptr^0,f,c
   400   006F8A  2A03               	incf	(tx_string@ptr+1)^0,f,c
   401   006F8C                     l777:
   402                           
   403                           ;uart_serial_commn.c: 36:     while(*ptr!=0)
   404   006F8C  C002  FFD9         	movff	tx_string@ptr,fsr2l
   405   006F90  C003  FFDA         	movff	tx_string@ptr+1,fsr2h
   406   006F94  50DF               	movf	indf2,w,c
   407   006F96  A4D8               	btfss	status,2,c
   408   006F98  EFD0  F037         	goto	u61
   409   006F9C  EFD2  F037         	goto	u60
   410   006FA0                     u61:
   411   006FA0  EFBD  F037         	goto	l773
   412   006FA4                     u60:
   413   006FA4  0012               	return		;funcret
   414   006FA6                     __end_of_tx_string:
   415                           	callstack 0
   416                           
   417 ;; *************** function _tx_data *****************
   418 ;; Defined at:
   419 ;;		line 22 in file "uart_serial_commn.c"
   420 ;; Parameters:    Size  Location     Type
   421 ;;  data            1    wreg     unsigned char 
   422 ;; Auto vars:     Size  Location     Type
   423 ;;  data            1    0[COMRAM] unsigned char 
   424 ;; Return value:  Size  Location     Type
   425 ;;                  2   23[None  ] int 
   426 ;; Registers used:
   427 ;;		wreg
   428 ;; Tracked objects:
   429 ;;		On entry : 0/0
   430 ;;		On exit  : 0/0
   431 ;;		Unchanged: 0/0
   432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   433 ;;      Params:         0       0       0       0       0       0       0
   434 ;;      Locals:         1       0       0       0       0       0       0
   435 ;;      Temps:          0       0       0       0       0       0       0
   436 ;;      Totals:         1       0       0       0       0       0       0
   437 ;;Total ram usage:        1 bytes
   438 ;; Hardware stack levels used: 1
   439 ;; This function calls:
   440 ;;		Nothing
   441 ;; This function is called by:
   442 ;;		_tx_string
   443 ;;		_main
   444 ;; This function uses a non-reentrant model
   445 ;;
   446                           
   447                           	psect	text3
   448   006EF8                     __ptext3:
   449                           	callstack 0
   450   006EF8                     _tx_data:
   451                           	callstack 29
   452                           
   453                           ;incstack = 0
   454                           ;tx_data@data stored from wreg
   455   006EF8  6E01               	movwf	tx_data@data^0,c
   456   006EFA                     l24:
   457   006EFA  A2AC               	btfss	172,1,c	;volatile
   458   006EFC  EF82  F037         	goto	u11
   459   006F00  EF84  F037         	goto	u10
   460   006F04                     u11:
   461   006F04  EF7D  F037         	goto	l24
   462   006F08                     u10:
   463   006F08                     
   464                           ;uart_serial_commn.c: 25:         TXREG = data;
   465   006F08  C001  FFAD         	movff	tx_data@data,4013	;volatile
   466   006F0C  0012               	return		;funcret
   467   006F0E                     __end_of_tx_data:
   468                           	callstack 0
   469                           
   470 ;; *************** function _rx_data *****************
   471 ;; Defined at:
   472 ;;		line 28 in file "uart_serial_commn.c"
   473 ;; Parameters:    Size  Location     Type
   474 ;;		None
   475 ;; Auto vars:     Size  Location     Type
   476 ;;		None
   477 ;; Return value:  Size  Location     Type
   478 ;;                  1    wreg      unsigned char 
   479 ;; Registers used:
   480 ;;		wreg, status,2
   481 ;; Tracked objects:
   482 ;;		On entry : 0/0
   483 ;;		On exit  : 0/0
   484 ;;		Unchanged: 0/0
   485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   486 ;;      Params:         0       0       0       0       0       0       0
   487 ;;      Locals:         0       0       0       0       0       0       0
   488 ;;      Temps:          0       0       0       0       0       0       0
   489 ;;      Totals:         0       0       0       0       0       0       0
   490 ;;Total ram usage:        0 bytes
   491 ;; Hardware stack levels used: 1
   492 ;; This function calls:
   493 ;;		Nothing
   494 ;; This function is called by:
   495 ;;		_main
   496 ;; This function uses a non-reentrant model
   497 ;;
   498                           
   499                           	psect	text4
   500   006EE4                     __ptext4:
   501                           	callstack 0
   502   006EE4                     _rx_data:
   503                           	callstack 30
   504   006EE4                     l30:
   505   006EE4  AA9E               	btfss	158,5,c	;volatile
   506   006EE6  EF77  F037         	goto	u21
   507   006EEA  EF79  F037         	goto	u20
   508   006EEE                     u21:
   509   006EEE  EF72  F037         	goto	l30
   510   006EF2                     u20:
   511   006EF2                     
   512                           ;uart_serial_commn.c: 31:         PIR1bits.RCIF=0;
   513   006EF2  9A9E               	bcf	158,5,c	;volatile
   514   006EF4                     
   515                           ;uart_serial_commn.c: 32:         return RCREG;
   516   006EF4  50AE               	movf	174,w,c	;volatile
   517   006EF6  0012               	return		;funcret
   518   006EF8                     __end_of_rx_data:
   519                           	callstack 0
   520   000000                     
   521                           	psect	rparam
   522   000000                     
   523                           	psect	idloc
   524                           
   525                           ;Config register IDLOC0 @ 0x200000
   526                           ;	unspecified, using default values
   527   200000                     	org	2097152
   528   200000  FF                 	db	255
   529                           
   530                           ;Config register IDLOC1 @ 0x200001
   531                           ;	unspecified, using default values
   532   200001                     	org	2097153
   533   200001  FF                 	db	255
   534                           
   535                           ;Config register IDLOC2 @ 0x200002
   536                           ;	unspecified, using default values
   537   200002                     	org	2097154
   538   200002  FF                 	db	255
   539                           
   540                           ;Config register IDLOC3 @ 0x200003
   541                           ;	unspecified, using default values
   542   200003                     	org	2097155
   543   200003  FF                 	db	255
   544                           
   545                           ;Config register IDLOC4 @ 0x200004
   546                           ;	unspecified, using default values
   547   200004                     	org	2097156
   548   200004  FF                 	db	255
   549                           
   550                           ;Config register IDLOC5 @ 0x200005
   551                           ;	unspecified, using default values
   552   200005                     	org	2097157
   553   200005  FF                 	db	255
   554                           
   555                           ;Config register IDLOC6 @ 0x200006
   556                           ;	unspecified, using default values
   557   200006                     	org	2097158
   558   200006  FF                 	db	255
   559                           
   560                           ;Config register IDLOC7 @ 0x200007
   561                           ;	unspecified, using default values
   562   200007                     	org	2097159
   563   200007  FF                 	db	255
   564                           
   565                           	psect	config
   566                           
   567                           ; Padding undefined space
   568   300000                     	org	3145728
   569   300000  FF                 	db	255
   570                           
   571                           ;Config register CONFIG1H @ 0x300001
   572                           ;	Oscillator Selection bits
   573                           ;	OSC = HS, HS oscillator
   574                           ;	Fail-Safe Clock Monitor Enable bit
   575                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   576                           ;	Internal/External Oscillator Switchover bit
   577                           ;	IESO = OFF, Oscillator Switchover mode disabled
   578   300001                     	org	3145729
   579   300001  02                 	db	2
   580                           
   581                           ;Config register CONFIG2L @ 0x300002
   582                           ;	Power-up Timer Enable bit
   583                           ;	PWRT = OFF, PWRT disabled
   584                           ;	Brown-out Reset Enable bits
   585                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
   586                           ;	Brown Out Reset Voltage bits
   587                           ;	BORV = 3, Minimum setting
   588   300002                     	org	3145730
   589   300002  1F                 	db	31
   590                           
   591                           ;Config register CONFIG2H @ 0x300003
   592                           ;	Watchdog Timer Enable bit
   593                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
   594                           ;	Watchdog Timer Postscale Select bits
   595                           ;	WDTPS = 32768, 1:32768
   596   300003                     	org	3145731
   597   300003  1E                 	db	30
   598                           
   599                           ; Padding undefined space
   600   300004                     	org	3145732
   601   300004  FF                 	db	255
   602                           
   603                           ;Config register CONFIG3H @ 0x300005
   604                           ;	CCP2 MUX bit
   605                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
   606                           ;	PORTB A/D Enable bit
   607                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
   608                           ;	Low-Power Timer1 Oscillator Enable bit
   609                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   610                           ;	MCLR Pin Enable bit
   611                           ;	MCLRE = OFF, RE3 input pin enabled; MCLR disabled
   612   300005                     	org	3145733
   613   300005  01                 	db	1
   614                           
   615                           ;Config register CONFIG4L @ 0x300006
   616                           ;	Stack Full/Underflow Reset Enable bit
   617                           ;	STVREN = ON, Stack full/underflow will cause Reset
   618                           ;	Single-Supply ICSP Enable bit
   619                           ;	LVP = OFF, Single-Supply ICSP disabled
   620                           ;	Extended Instruction Set Enable bit
   621                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   622                           ;	Background Debugger Enable bit
   623                           ;	DEBUG = 0x1, unprogrammed default
   624   300006                     	org	3145734
   625   300006  81                 	db	129
   626                           
   627                           ; Padding undefined space
   628   300007                     	org	3145735
   629   300007  FF                 	db	255
   630                           
   631                           ;Config register CONFIG5L @ 0x300008
   632                           ;	Code Protection bit
   633                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
   634                           ;	Code Protection bit
   635                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
   636                           ;	Code Protection bit
   637                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
   638                           ;	Code Protection bit
   639                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
   640   300008                     	org	3145736
   641   300008  0F                 	db	15
   642                           
   643                           ;Config register CONFIG5H @ 0x300009
   644                           ;	Boot Block Code Protection bit
   645                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
   646                           ;	Data EEPROM Code Protection bit
   647                           ;	CPD = OFF, Data EEPROM not code-protected
   648   300009                     	org	3145737
   649   300009  C0                 	db	192
   650                           
   651                           ;Config register CONFIG6L @ 0x30000A
   652                           ;	Write Protection bit
   653                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
   654                           ;	Write Protection bit
   655                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
   656                           ;	Write Protection bit
   657                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
   658                           ;	Write Protection bit
   659                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
   660   30000A                     	org	3145738
   661   30000A  0F                 	db	15
   662                           
   663                           ;Config register CONFIG6H @ 0x30000B
   664                           ;	Configuration Register Write Protection bit
   665                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
   666                           ;	Boot Block Write Protection bit
   667                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
   668                           ;	Data EEPROM Write Protection bit
   669                           ;	WRTD = OFF, Data EEPROM not write-protected
   670   30000B                     	org	3145739
   671   30000B  E0                 	db	224
   672                           
   673                           ;Config register CONFIG7L @ 0x30000C
   674                           ;	Table Read Protection bit
   675                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
   676                           ;	Table Read Protection bit
   677                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
   678                           ;	Table Read Protection bit
   679                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
   680                           ;	Table Read Protection bit
   681                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
   682   30000C                     	org	3145740
   683   30000C  0F                 	db	15
   684                           
   685                           ;Config register CONFIG7H @ 0x30000D
   686                           ;	Boot Block Table Read Protection bit
   687                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
   688   30000D                     	org	3145741
   689   30000D  40                 	db	64
   690                           tosu	equ	0xFFF
   691                           tosh	equ	0xFFE
   692                           tosl	equ	0xFFD
   693                           stkptr	equ	0xFFC
   694                           pclatu	equ	0xFFB
   695                           pclath	equ	0xFFA
   696                           pcl	equ	0xFF9
   697                           tblptru	equ	0xFF8
   698                           tblptrh	equ	0xFF7
   699                           tblptrl	equ	0xFF6
   700                           tablat	equ	0xFF5
   701                           prodh	equ	0xFF4
   702                           prodl	equ	0xFF3
   703                           indf0	equ	0xFEF
   704                           postinc0	equ	0xFEE
   705                           postdec0	equ	0xFED
   706                           preinc0	equ	0xFEC
   707                           plusw0	equ	0xFEB
   708                           fsr0h	equ	0xFEA
   709                           fsr0l	equ	0xFE9
   710                           wreg	equ	0xFE8
   711                           indf1	equ	0xFE7
   712                           postinc1	equ	0xFE6
   713                           postdec1	equ	0xFE5
   714                           preinc1	equ	0xFE4
   715                           plusw1	equ	0xFE3
   716                           fsr1h	equ	0xFE2
   717                           fsr1l	equ	0xFE1
   718                           bsr	equ	0xFE0
   719                           indf2	equ	0xFDF
   720                           postinc2	equ	0xFDE
   721                           postdec2	equ	0xFDD
   722                           preinc2	equ	0xFDC
   723                           plusw2	equ	0xFDB
   724                           fsr2h	equ	0xFDA
   725                           fsr2l	equ	0xFD9
   726                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        34
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     38      72
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    tx_string@ptr	PTR unsigned char  size(2) Largest target is 17
		 -> main@msg2(COMRAM[17]), main@msg1(COMRAM[17]), 


Critical Paths under _main in COMRAM

    _main->_tx_string
    _tx_string->_tx_data

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                36    36      0     323
                                              3 COMRAM    35    35      0
                            _rx_data
                            _tx_data
                          _tx_string
                          _uart_init
 ---------------------------------------------------------------------------------
 (1) _uart_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _tx_string                                            2     0      2     212
                                              1 COMRAM     2     0      2
                            _tx_data
 ---------------------------------------------------------------------------------
 (2) _tx_data                                              1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _rx_data                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _rx_data
   _tx_data
   _tx_string
     _tx_data
   _uart_init

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      22        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     26      48       1       56.7%
BITBIGSFRhh         47      0       0      16        0.0%
BITBIGSFRll         14      0       0      20        0.0%
BITBIGSFRlhh         C      0       0      18        0.0%
BITBIGSFRlhl         9      0       0      19        0.0%
BITBIGSFRhlh         7      0       0      17        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      48      21        0.0%
DATA                 0      0      48       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu Dec 15 14:00:29 2022

                     l21 6F2C                       l30 6EE4                       l32 6EF2  
                     l24 6EFA                       l33 6EF6                       l27 6F0C  
                     l39 6FA4                       l48 6FF8                       l49 6FF8  
                     u10 6F08                       u11 6F04                       u20 6EF2  
                     u21 6EEE                       u60 6FA4                       u61 6FA0  
                     u71 6FB0                       u81 6FC2                      l731 6F0E  
                    l741 6EF4                      l733 6F1C                      l727 6EFA  
                    l735 6F28                      l729 6F08                      l737 6F2A  
                    l739 6EE4                      l771 6F76                      l773 6F7A  
                    l781 6FA6                      l775 6F88                      l791 6FE0  
                    l783 6FB8                      l777 6F8C                      l793 6FEC  
                    l785 6FCA                      l795 6FF2                      l787 6FCE  
                    l779 6FA6                      l789 6FD4                      wreg 000FE8  
                   _main 6FA6                     fsr2h 000FDA                     indf2 000FDF  
                   fsr1l 000FE1                     fsr2l 000FD9                     start 0000  
           ___param_bank 000000                    ?_main 0001                    _RCREG 000FAE  
                  _SPBRG 000FAF                    _TXREG 000FAD                    tablat 000FF5  
        __end_of_rx_data 6EF8                    plusw1 000FE3                    plusw2 000FDB  
        __end_of_tx_data 6F0E                    status 000FD8          __initialization 6F50  
           __end_of_main 7000                   ??_main 0004            __activetblptr 000000  
      main@received_data 0026                   _SPBRGH 000FB0                   isa$std 000001  
           __pdataCOMRAM 0027                   tblptrh 000FF7                   tblptrl 000FF6  
                 tblptru 000FF8                ??_rx_data 0001                ??_tx_data 0001  
             __accesstop 0080  __end_of__initialization 6F70            ___rparam_used 000001  
         __pcstackCOMRAM 0001                  _BAUDCON 000FB8                  __Hparam 0000  
                __Lparam 0000                  __pcinit 6F50                  __ramtop 0600  
                __ptext0 6FA6                  __ptext1 6F0E                  __ptext2 6F76  
                __ptext3 6EF8                  __ptext4 6EE4                  _rx_data 6EE4  
                _tx_data 6EF8     end_of_initialization 6F70             tx_string@ptr 0002  
      __end_of_uart_init 6F2E                _RCSTAbits 000FAB                  postdec1 000FE5  
                postinc0 000FEE        __end_of_tx_string 6FA6                _TRISCbits 000F94  
              _TXSTAbits 000FAC            __pidataCOMRAM 6F2E      start_initialization 6F50  
            tx_data@data 0001                 ?_rx_data 0001                 ?_tx_data 0001  
               _PIR1bits 000F9E                main@F2576 0038                main@F2578 0027  
              _uart_init 6F0E                _tx_string 6F76                copy_data0 6F64  
               __Hrparam 0000                 __Lrparam 0000               ?_uart_init 0001  
             ?_tx_string 0002                 isa$xinst 000000                 main@msg1 0004  
               main@msg2 0015              ??_uart_init 0001              ??_tx_string 0004  
