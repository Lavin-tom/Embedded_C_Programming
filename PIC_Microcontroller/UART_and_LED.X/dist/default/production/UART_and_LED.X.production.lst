

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu Dec 15 15:18:06 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    13                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    15                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    16   000000                     
    17                           ; Version 2.40
    18                           ; Generated 17/11/2021 GMT
    19                           ; 
    20                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution. Publication is not required when
    34                           ;        this file is used in an embedded application.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC18F4520 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52   000000                     
    53                           	psect	idataCOMRAM
    54   006EA7                     __pidataCOMRAM:
    55                           	callstack 0
    56                           
    57                           ;initializer for main@F2576
    58   006EA7  0D                 	db	13
    59   006EA8  74                 	db	116
    60   006EA9  65                 	db	101
    61   006EAA  73                 	db	115
    62   006EAB  74                 	db	116
    63   006EAC  69                 	db	105
    64   006EAD  6E                 	db	110
    65   006EAE  67                 	db	103
    66   006EAF  20                 	db	32
    67   006EB0  6F                 	db	111
    68   006EB1  66                 	db	102
    69   006EB2  20                 	db	32
    70   006EB3  75                 	db	117
    71   006EB4  61                 	db	97
    72   006EB5  72                 	db	114
    73   006EB6  74                 	db	116
    74   006EB7  0D                 	db	13
    75   006EB8  00                 	db	0
    76                           
    77                           ;initializer for main@F2578
    78   006EB9  79                 	db	121
    79   006EBA  65                 	db	101
    80   006EBB  73                 	db	115
    81   006EBC  20                 	db	32
    82   006EBD  69                 	db	105
    83   006EBE  74                 	db	116
    84   006EBF  73                 	db	115
    85   006EC0  20                 	db	32
    86   006EC1  77                 	db	119
    87   006EC2  6F                 	db	111
    88   006EC3  72                 	db	114
    89   006EC4  6B                 	db	107
    90   006EC5  69                 	db	105
    91   006EC6  6E                 	db	110
    92   006EC7  67                 	db	103
    93   006EC8  0D                 	db	13
    94   006EC9  00                 	db	0
    95   000000                     _RCREG	set	4014
    96   000000                     _TXREG	set	4013
    97   000000                     _SPBRG	set	4015
    98   000000                     _BAUDCON	set	4024
    99   000000                     _PORTB	set	3969
   100   000000                     _TRISB	set	3987
   101   000000                     _TRISCbits	set	3988
   102   000000                     _RCSTAbits	set	4011
   103   000000                     _TXSTAbits	set	4012
   104   000000                     _SPBRGH	set	4016
   105   000000                     _PIR1bits	set	3998
   106   000000                     _LATBbits	set	3978
   107                           
   108                           ; #config settings
   109                           
   110                           	psect	cinit
   111   006ECA                     __pcinit:
   112                           	callstack 0
   113   006ECA                     start_initialization:
   114                           	callstack 0
   115   006ECA                     __initialization:
   116                           	callstack 0
   117                           
   118                           ; Initialize objects allocated to COMRAM (35 bytes)
   119                           ; load TBLPTR registers with __pidataCOMRAM
   120   006ECA  0EA7               	movlw	low __pidataCOMRAM
   121   006ECC  6EF6               	movwf	tblptrl,c
   122   006ECE  0E6E               	movlw	high __pidataCOMRAM
   123   006ED0  6EF7               	movwf	tblptrh,c
   124   006ED2  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   125   006ED4  6EF8               	movwf	tblptru,c
   126   006ED6  EE00  F027         	lfsr	0,__pdataCOMRAM
   127   006EDA  EE10 F023          	lfsr	1,35
   128   006EDE                     copy_data0:
   129   006EDE  0009               	tblrd		*+
   130   006EE0  CFF5 FFEE          	movff	tablat,postinc0
   131   006EE4  50E5               	movf	postdec1,w,c
   132   006EE6  50E1               	movf	fsr1l,w,c
   133   006EE8  E1FA               	bnz	copy_data0
   134   006EEA                     end_of_initialization:
   135                           	callstack 0
   136   006EEA                     __end_of__initialization:
   137                           	callstack 0
   138   006EEA  0E00               	movlw	low (__Lmediumconst shr (0+16))
   139   006EEC  6EF8               	movwf	tblptru,c
   140   006EEE  0100               	movlb	0
   141   006EF0  EF7A  F037         	goto	_main	;jump to C main() function
   142                           
   143                           	psect	dataCOMRAM
   144   000027                     __pdataCOMRAM:
   145                           	callstack 0
   146   000027                     main@F2576:
   147                           	callstack 0
   148   000027                     	ds	18
   149   000039                     main@F2578:
   150                           	callstack 0
   151   000039                     	ds	17
   152                           
   153                           	psect	cstackCOMRAM
   154   000001                     __pcstackCOMRAM:
   155                           	callstack 0
   156   000001                     ??_main:
   157   000001                     
   158                           ; 2 bytes @ 0x0
   159   000001                     	ds	2
   160   000003                     main@msg1:
   161                           	callstack 0
   162                           
   163                           ; 18 bytes @ 0x2
   164   000003                     	ds	18
   165   000015                     main@msg2:
   166                           	callstack 0
   167                           
   168                           ; 17 bytes @ 0x14
   169   000015                     	ds	17
   170   000026                     main@received_data:
   171                           	callstack 0
   172                           
   173                           ; 1 bytes @ 0x25
   174   000026                     	ds	1
   175                           
   176 ;;
   177 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   178 ;;
   179 ;; *************** function _main *****************
   180 ;; Defined at:
   181 ;;		line 45 in file "uart_and_led.c"
   182 ;; Parameters:    Size  Location     Type
   183 ;;		None
   184 ;; Auto vars:     Size  Location     Type
   185 ;;  msg1           18    2[COMRAM] unsigned char [18]
   186 ;;  msg2           17   20[COMRAM] unsigned char [17]
   187 ;;  received_dat    1   37[COMRAM] unsigned char 
   188 ;;  data            1    0        unsigned char 
   189 ;; Return value:  Size  Location     Type
   190 ;;                  1    wreg      void 
   191 ;; Registers used:
   192 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   193 ;; Tracked objects:
   194 ;;		On entry : 0/0
   195 ;;		On exit  : 0/0
   196 ;;		Unchanged: 0/0
   197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   198 ;;      Params:         0       0       0       0       0       0       0
   199 ;;      Locals:        36       0       0       0       0       0       0
   200 ;;      Temps:          2       0       0       0       0       0       0
   201 ;;      Totals:        38       0       0       0       0       0       0
   202 ;;Total ram usage:       38 bytes
   203 ;; Hardware stack levels required when called: 1
   204 ;; This function calls:
   205 ;;		_rx_data
   206 ;;		_uart_init
   207 ;; This function is called by:
   208 ;;		Startup code after reset
   209 ;; This function uses a non-reentrant model
   210 ;;
   211                           
   212                           	psect	text0
   213   006EF4                     __ptext0:
   214                           	callstack 0
   215   006EF4                     _main:
   216                           	callstack 30
   217   006EF4                     
   218                           ;uart_and_led.c: 46:     TRISB=0;
   219   006EF4  0E00               	movlw	0
   220   006EF6  6E93               	movwf	147,c	;volatile
   221   006EF8                     
   222                           ;uart_and_led.c: 48:     unsigned char msg1[]="\rtesting of uart\r";
   223   006EF8  EE20  F027         	lfsr	2,main@F2576
   224   006EFC  EE10  F003         	lfsr	1,main@msg1
   225   006F00  0E11               	movlw	17
   226   006F02                     u41:
   227   006F02  CFDB FFE3          	movff	plusw2,plusw1
   228   006F06  06E8               	decf	wreg,f,c
   229   006F08  E2FC               	bc	u41
   230   006F0A                     
   231                           ;uart_and_led.c: 49:     unsigned char msg2[]="yes its working\r";
   232   006F0A  EE20  F039         	lfsr	2,main@F2578
   233   006F0E  EE10  F015         	lfsr	1,main@msg2
   234   006F12  0E10               	movlw	16
   235   006F14                     u51:
   236   006F14  CFDB FFE3          	movff	plusw2,plusw1
   237   006F18  06E8               	decf	wreg,f,c
   238   006F1A  E2FC               	bc	u51
   239                           
   240                           ;uart_and_led.c: 50:     PORTB=0x0;
   241   006F1C  0E00               	movlw	0
   242   006F1E  6E81               	movwf	129,c	;volatile
   243   006F20                     
   244                           ;uart_and_led.c: 51:     uart_init();
   245   006F20  EC43  F037         	call	_uart_init	;wreg free
   246   006F24                     l779:
   247                           
   248                           ;uart_and_led.c: 53:     {;uart_and_led.c: 64:         received_data=rx_data();
   249   006F24  EC39  F037         	call	_rx_data	;wreg free
   250   006F28  6E26               	movwf	main@received_data^0,c
   251                           
   252                           ;uart_and_led.c: 65:         switch(received_data-48)
   253   006F2A  EFC6  F037         	goto	l815
   254   006F2E                     l781:
   255                           
   256                           ;uart_and_led.c: 68:                 PORTB= 0x0;
   257   006F2E  0E00               	movlw	0
   258   006F30  6E81               	movwf	129,c	;volatile
   259                           
   260                           ;uart_and_led.c: 69:                  break;
   261   006F32  EF92  F037         	goto	l779
   262   006F36                     l783:
   263                           
   264                           ;uart_and_led.c: 71:                 PORTB=0x0;
   265   006F36  0E00               	movlw	0
   266   006F38  6E81               	movwf	129,c	;volatile
   267   006F3A                     
   268                           ;uart_and_led.c: 72:                 LATBbits.LB0 = 1;
   269   006F3A  808A               	bsf	138,0,c	;volatile
   270                           
   271                           ;uart_and_led.c: 73:                 break;
   272   006F3C  EF92  F037         	goto	l779
   273   006F40                     l787:
   274                           
   275                           ;uart_and_led.c: 75:                 PORTB= 0x0;
   276   006F40  0E00               	movlw	0
   277   006F42  6E81               	movwf	129,c	;volatile
   278   006F44                     
   279                           ;uart_and_led.c: 76:                 LATBbits.LB1 = 1;
   280   006F44  828A               	bsf	138,1,c	;volatile
   281                           
   282                           ;uart_and_led.c: 77:                 break;
   283   006F46  EF92  F037         	goto	l779
   284   006F4A                     l791:
   285                           
   286                           ;uart_and_led.c: 79:                 PORTB= 0x0;
   287   006F4A  0E00               	movlw	0
   288   006F4C  6E81               	movwf	129,c	;volatile
   289   006F4E                     
   290                           ;uart_and_led.c: 80:                 LATBbits.LB2 = 1;
   291   006F4E  848A               	bsf	138,2,c	;volatile
   292                           
   293                           ;uart_and_led.c: 81:                 break;
   294   006F50  EF92  F037         	goto	l779
   295   006F54                     l795:
   296                           
   297                           ;uart_and_led.c: 83:                 PORTB= 0x0;
   298   006F54  0E00               	movlw	0
   299   006F56  6E81               	movwf	129,c	;volatile
   300   006F58                     
   301                           ;uart_and_led.c: 84:                 LATBbits.LB3 = 1;
   302   006F58  868A               	bsf	138,3,c	;volatile
   303                           
   304                           ;uart_and_led.c: 85:                 break;
   305   006F5A  EF92  F037         	goto	l779
   306   006F5E                     l799:
   307                           
   308                           ;uart_and_led.c: 87:                 PORTB= 0x0;
   309   006F5E  0E00               	movlw	0
   310   006F60  6E81               	movwf	129,c	;volatile
   311   006F62                     
   312                           ;uart_and_led.c: 88:                 LATBbits.LB4 = 1;
   313   006F62  888A               	bsf	138,4,c	;volatile
   314                           
   315                           ;uart_and_led.c: 89:                 break;
   316   006F64  EF92  F037         	goto	l779
   317   006F68                     l803:
   318                           
   319                           ;uart_and_led.c: 91:                 PORTB= 0x0;
   320   006F68  0E00               	movlw	0
   321   006F6A  6E81               	movwf	129,c	;volatile
   322   006F6C                     
   323                           ;uart_and_led.c: 92:                 LATBbits.LB5 = 1;
   324   006F6C  8A8A               	bsf	138,5,c	;volatile
   325                           
   326                           ;uart_and_led.c: 93:                 break;
   327   006F6E  EF92  F037         	goto	l779
   328   006F72                     l807:
   329                           
   330                           ;uart_and_led.c: 95:                 PORTB= 0x0;
   331   006F72  0E00               	movlw	0
   332   006F74  6E81               	movwf	129,c	;volatile
   333   006F76                     
   334                           ;uart_and_led.c: 96:                 LATBbits.LB6 = 1;
   335   006F76  8C8A               	bsf	138,6,c	;volatile
   336                           
   337                           ;uart_and_led.c: 97:                 break;
   338   006F78  EF92  F037         	goto	l779
   339   006F7C                     l811:
   340                           
   341                           ;uart_and_led.c: 99:                 PORTB= 0x0;
   342   006F7C  0E00               	movlw	0
   343   006F7E  6E81               	movwf	129,c	;volatile
   344   006F80                     
   345                           ;uart_and_led.c: 100:                 LATBbits.LB7 = 1;
   346   006F80  8E8A               	bsf	138,7,c	;volatile
   347                           
   348                           ;uart_and_led.c: 101:                 break;
   349   006F82  EF92  F037         	goto	l779
   350   006F86                     l66:
   351                           
   352                           ;uart_and_led.c: 103:                 PORTB=0xFF;
   353   006F86  6881               	setf	129,c	;volatile
   354                           
   355                           ;uart_and_led.c: 104:         }
   356   006F88  EF92  F037         	goto	l779
   357   006F8C                     l815:
   358   006F8C  0ED0               	movlw	208
   359   006F8E  2426               	addwf	main@received_data^0,w,c
   360   006F90  6E01               	movwf	??_main^0,c
   361   006F92  6A02               	clrf	(??_main+1)^0,c
   362   006F94  0EFF               	movlw	255
   363   006F96  2202               	addwfc	(??_main+1)^0,f,c
   364                           
   365                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   366                           ; Switch size 1, requested type "simple"
   367                           ; Number of cases is 1, Range of values is 0 to 0
   368                           ; switch strategies available:
   369                           ; Name         Instructions Cycles
   370                           ; simple_byte            4     3 (average)
   371                           ;	Chosen strategy is simple_byte
   372   006F98  5002               	movf	(??_main+1)^0,w,c
   373   006F9A  0A00               	xorlw	0	; case 0
   374   006F9C  B4D8               	btfsc	status,2,c
   375   006F9E  EFD3  F037         	goto	l825
   376   006FA2  EF92  F037         	goto	l779
   377   006FA6                     l825:
   378                           
   379                           ; Switch size 1, requested type "simple"
   380                           ; Number of cases is 10, Range of values is 0 to 9
   381                           ; switch strategies available:
   382                           ; Name         Instructions Cycles
   383                           ; simple_byte           31    16 (average)
   384                           ;	Chosen strategy is simple_byte
   385   006FA6  5001               	movf	??_main^0,w,c
   386   006FA8  0A00               	xorlw	0	; case 0
   387   006FAA  B4D8               	btfsc	status,2,c
   388   006FAC  EF97  F037         	goto	l781
   389   006FB0  0A01               	xorlw	1	; case 1
   390   006FB2  B4D8               	btfsc	status,2,c
   391   006FB4  EF9B  F037         	goto	l783
   392   006FB8  0A03               	xorlw	3	; case 2
   393   006FBA  B4D8               	btfsc	status,2,c
   394   006FBC  EFA0  F037         	goto	l787
   395   006FC0  0A01               	xorlw	1	; case 3
   396   006FC2  B4D8               	btfsc	status,2,c
   397   006FC4  EFA5  F037         	goto	l791
   398   006FC8  0A07               	xorlw	7	; case 4
   399   006FCA  B4D8               	btfsc	status,2,c
   400   006FCC  EFAA  F037         	goto	l795
   401   006FD0  0A01               	xorlw	1	; case 5
   402   006FD2  B4D8               	btfsc	status,2,c
   403   006FD4  EFAF  F037         	goto	l799
   404   006FD8  0A03               	xorlw	3	; case 6
   405   006FDA  B4D8               	btfsc	status,2,c
   406   006FDC  EFB4  F037         	goto	l803
   407   006FE0  0A01               	xorlw	1	; case 7
   408   006FE2  B4D8               	btfsc	status,2,c
   409   006FE4  EFB9  F037         	goto	l807
   410   006FE8  0A0F               	xorlw	15	; case 8
   411   006FEA  B4D8               	btfsc	status,2,c
   412   006FEC  EFBE  F037         	goto	l811
   413   006FF0  0A01               	xorlw	1	; case 9
   414   006FF2  B4D8               	btfsc	status,2,c
   415   006FF4  EFC3  F037         	goto	l66
   416   006FF8  EF92  F037         	goto	l779
   417   006FFC  EF00  F000         	goto	start
   418   007000                     __end_of_main:
   419                           	callstack 0
   420                           
   421 ;; *************** function _uart_init *****************
   422 ;; Defined at:
   423 ;;		line 4 in file "uart_and_led.c"
   424 ;; Parameters:    Size  Location     Type
   425 ;;		None
   426 ;; Auto vars:     Size  Location     Type
   427 ;;		None
   428 ;; Return value:  Size  Location     Type
   429 ;;                  2   26[None  ] int 
   430 ;; Registers used:
   431 ;;		wreg, status,2
   432 ;; Tracked objects:
   433 ;;		On entry : 0/0
   434 ;;		On exit  : 0/0
   435 ;;		Unchanged: 0/0
   436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   437 ;;      Params:         0       0       0       0       0       0       0
   438 ;;      Locals:         0       0       0       0       0       0       0
   439 ;;      Temps:          0       0       0       0       0       0       0
   440 ;;      Totals:         0       0       0       0       0       0       0
   441 ;;Total ram usage:        0 bytes
   442 ;; Hardware stack levels used: 1
   443 ;; This function calls:
   444 ;;		Nothing
   445 ;; This function is called by:
   446 ;;		_main
   447 ;; This function uses a non-reentrant model
   448 ;;
   449                           
   450                           	psect	text1
   451   006E86                     __ptext1:
   452                           	callstack 0
   453   006E86                     _uart_init:
   454                           	callstack 30
   455   006E86                     
   456                           ;uart_and_led.c: 6:    TXSTAbits.SYNC =0;
   457   006E86  98AC               	bcf	172,4,c	;volatile
   458                           
   459                           ;uart_and_led.c: 7:    TXSTAbits.TX9 = 0;
   460   006E88  9CAC               	bcf	172,6,c	;volatile
   461                           
   462                           ;uart_and_led.c: 8:    TXSTAbits.TXEN = 1;
   463   006E8A  8AAC               	bsf	172,5,c	;volatile
   464                           
   465                           ;uart_and_led.c: 9:    TXSTAbits.BRGH = 1;
   466   006E8C  84AC               	bsf	172,2,c	;volatile
   467                           
   468                           ;uart_and_led.c: 11:    RCSTAbits.CREN = 1 ;
   469   006E8E  88AB               	bsf	171,4,c	;volatile
   470                           
   471                           ;uart_and_led.c: 12:    RCSTAbits.RX9 = 0;
   472   006E90  9CAB               	bcf	171,6,c	;volatile
   473                           
   474                           ;uart_and_led.c: 13:    RCSTAbits.SPEN = 1;
   475   006E92  8EAB               	bsf	171,7,c	;volatile
   476   006E94                     
   477                           ;uart_and_led.c: 15:    BAUDCON = 0x00;
   478   006E94  0E00               	movlw	0
   479   006E96  6EB8               	movwf	184,c	;volatile
   480                           
   481                           ;uart_and_led.c: 16:    SPBRG = 129;
   482   006E98  0E81               	movlw	129
   483   006E9A  6EAF               	movwf	175,c	;volatile
   484                           
   485                           ;uart_and_led.c: 17:    SPBRGH = 0;
   486   006E9C  0E00               	movlw	0
   487   006E9E  6EB0               	movwf	176,c	;volatile
   488   006EA0                     
   489                           ;uart_and_led.c: 18:    TRISCbits.RC6 = 0;
   490   006EA0  9C94               	bcf	148,6,c	;volatile
   491   006EA2                     
   492                           ;uart_and_led.c: 19:    TRISCbits.RC7 = 1;
   493   006EA2  8E94               	bsf	148,7,c	;volatile
   494   006EA4  0012               	return		;funcret
   495   006EA6                     __end_of_uart_init:
   496                           	callstack 0
   497                           
   498 ;; *************** function _rx_data *****************
   499 ;; Defined at:
   500 ;;		line 30 in file "uart_and_led.c"
   501 ;; Parameters:    Size  Location     Type
   502 ;;		None
   503 ;; Auto vars:     Size  Location     Type
   504 ;;		None
   505 ;; Return value:  Size  Location     Type
   506 ;;                  1    wreg      unsigned char 
   507 ;; Registers used:
   508 ;;		wreg, status,2
   509 ;; Tracked objects:
   510 ;;		On entry : 0/0
   511 ;;		On exit  : 0/0
   512 ;;		Unchanged: 0/0
   513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   514 ;;      Params:         0       0       0       0       0       0       0
   515 ;;      Locals:         0       0       0       0       0       0       0
   516 ;;      Temps:          0       0       0       0       0       0       0
   517 ;;      Totals:         0       0       0       0       0       0       0
   518 ;;Total ram usage:        0 bytes
   519 ;; Hardware stack levels used: 1
   520 ;; This function calls:
   521 ;;		Nothing
   522 ;; This function is called by:
   523 ;;		_main
   524 ;; This function uses a non-reentrant model
   525 ;;
   526                           
   527                           	psect	text2
   528   006E72                     __ptext2:
   529                           	callstack 0
   530   006E72                     _rx_data:
   531                           	callstack 30
   532   006E72                     l36:
   533   006E72  AA9E               	btfss	158,5,c	;volatile
   534   006E74  EF3E  F037         	goto	u21
   535   006E78  EF40  F037         	goto	u20
   536   006E7C                     u21:
   537   006E7C  EF39  F037         	goto	l36
   538   006E80                     u20:
   539   006E80                     
   540                           ;uart_and_led.c: 33:         PIR1bits.RCIF=0;
   541   006E80  9A9E               	bcf	158,5,c	;volatile
   542   006E82                     
   543                           ;uart_and_led.c: 34:         return RCREG;
   544   006E82  50AE               	movf	174,w,c	;volatile
   545   006E84  0012               	return		;funcret
   546   006E86                     __end_of_rx_data:
   547                           	callstack 0
   548   000000                     
   549                           	psect	rparam
   550   000000                     
   551                           	psect	idloc
   552                           
   553                           ;Config register IDLOC0 @ 0x200000
   554                           ;	unspecified, using default values
   555   200000                     	org	2097152
   556   200000  FF                 	db	255
   557                           
   558                           ;Config register IDLOC1 @ 0x200001
   559                           ;	unspecified, using default values
   560   200001                     	org	2097153
   561   200001  FF                 	db	255
   562                           
   563                           ;Config register IDLOC2 @ 0x200002
   564                           ;	unspecified, using default values
   565   200002                     	org	2097154
   566   200002  FF                 	db	255
   567                           
   568                           ;Config register IDLOC3 @ 0x200003
   569                           ;	unspecified, using default values
   570   200003                     	org	2097155
   571   200003  FF                 	db	255
   572                           
   573                           ;Config register IDLOC4 @ 0x200004
   574                           ;	unspecified, using default values
   575   200004                     	org	2097156
   576   200004  FF                 	db	255
   577                           
   578                           ;Config register IDLOC5 @ 0x200005
   579                           ;	unspecified, using default values
   580   200005                     	org	2097157
   581   200005  FF                 	db	255
   582                           
   583                           ;Config register IDLOC6 @ 0x200006
   584                           ;	unspecified, using default values
   585   200006                     	org	2097158
   586   200006  FF                 	db	255
   587                           
   588                           ;Config register IDLOC7 @ 0x200007
   589                           ;	unspecified, using default values
   590   200007                     	org	2097159
   591   200007  FF                 	db	255
   592                           
   593                           	psect	config
   594                           
   595                           ; Padding undefined space
   596   300000                     	org	3145728
   597   300000  FF                 	db	255
   598                           
   599                           ;Config register CONFIG1H @ 0x300001
   600                           ;	Oscillator Selection bits
   601                           ;	OSC = HS, HS oscillator
   602                           ;	Fail-Safe Clock Monitor Enable bit
   603                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   604                           ;	Internal/External Oscillator Switchover bit
   605                           ;	IESO = OFF, Oscillator Switchover mode disabled
   606   300001                     	org	3145729
   607   300001  02                 	db	2
   608                           
   609                           ;Config register CONFIG2L @ 0x300002
   610                           ;	Power-up Timer Enable bit
   611                           ;	PWRT = OFF, PWRT disabled
   612                           ;	Brown-out Reset Enable bits
   613                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
   614                           ;	Brown Out Reset Voltage bits
   615                           ;	BORV = 3, Minimum setting
   616   300002                     	org	3145730
   617   300002  1F                 	db	31
   618                           
   619                           ;Config register CONFIG2H @ 0x300003
   620                           ;	Watchdog Timer Enable bit
   621                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
   622                           ;	Watchdog Timer Postscale Select bits
   623                           ;	WDTPS = 32768, 1:32768
   624   300003                     	org	3145731
   625   300003  1E                 	db	30
   626                           
   627                           ; Padding undefined space
   628   300004                     	org	3145732
   629   300004  FF                 	db	255
   630                           
   631                           ;Config register CONFIG3H @ 0x300005
   632                           ;	CCP2 MUX bit
   633                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
   634                           ;	PORTB A/D Enable bit
   635                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
   636                           ;	Low-Power Timer1 Oscillator Enable bit
   637                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   638                           ;	MCLR Pin Enable bit
   639                           ;	MCLRE = OFF, RE3 input pin enabled; MCLR disabled
   640   300005                     	org	3145733
   641   300005  01                 	db	1
   642                           
   643                           ;Config register CONFIG4L @ 0x300006
   644                           ;	Stack Full/Underflow Reset Enable bit
   645                           ;	STVREN = ON, Stack full/underflow will cause Reset
   646                           ;	Single-Supply ICSP Enable bit
   647                           ;	LVP = OFF, Single-Supply ICSP disabled
   648                           ;	Extended Instruction Set Enable bit
   649                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   650                           ;	Background Debugger Enable bit
   651                           ;	DEBUG = 0x1, unprogrammed default
   652   300006                     	org	3145734
   653   300006  81                 	db	129
   654                           
   655                           ; Padding undefined space
   656   300007                     	org	3145735
   657   300007  FF                 	db	255
   658                           
   659                           ;Config register CONFIG5L @ 0x300008
   660                           ;	Code Protection bit
   661                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
   662                           ;	Code Protection bit
   663                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
   664                           ;	Code Protection bit
   665                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
   666                           ;	Code Protection bit
   667                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
   668   300008                     	org	3145736
   669   300008  0F                 	db	15
   670                           
   671                           ;Config register CONFIG5H @ 0x300009
   672                           ;	Boot Block Code Protection bit
   673                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
   674                           ;	Data EEPROM Code Protection bit
   675                           ;	CPD = OFF, Data EEPROM not code-protected
   676   300009                     	org	3145737
   677   300009  C0                 	db	192
   678                           
   679                           ;Config register CONFIG6L @ 0x30000A
   680                           ;	Write Protection bit
   681                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
   682                           ;	Write Protection bit
   683                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
   684                           ;	Write Protection bit
   685                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
   686                           ;	Write Protection bit
   687                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
   688   30000A                     	org	3145738
   689   30000A  0F                 	db	15
   690                           
   691                           ;Config register CONFIG6H @ 0x30000B
   692                           ;	Configuration Register Write Protection bit
   693                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
   694                           ;	Boot Block Write Protection bit
   695                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
   696                           ;	Data EEPROM Write Protection bit
   697                           ;	WRTD = OFF, Data EEPROM not write-protected
   698   30000B                     	org	3145739
   699   30000B  E0                 	db	224
   700                           
   701                           ;Config register CONFIG7L @ 0x30000C
   702                           ;	Table Read Protection bit
   703                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
   704                           ;	Table Read Protection bit
   705                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
   706                           ;	Table Read Protection bit
   707                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
   708                           ;	Table Read Protection bit
   709                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
   710   30000C                     	org	3145740
   711   30000C  0F                 	db	15
   712                           
   713                           ;Config register CONFIG7H @ 0x30000D
   714                           ;	Boot Block Table Read Protection bit
   715                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
   716   30000D                     	org	3145741
   717   30000D  40                 	db	64
   718                           tosu	equ	0xFFF
   719                           tosh	equ	0xFFE
   720                           tosl	equ	0xFFD
   721                           stkptr	equ	0xFFC
   722                           pclatu	equ	0xFFB
   723                           pclath	equ	0xFFA
   724                           pcl	equ	0xFF9
   725                           tblptru	equ	0xFF8
   726                           tblptrh	equ	0xFF7
   727                           tblptrl	equ	0xFF6
   728                           tablat	equ	0xFF5
   729                           prodh	equ	0xFF4
   730                           prodl	equ	0xFF3
   731                           indf0	equ	0xFEF
   732                           postinc0	equ	0xFEE
   733                           postdec0	equ	0xFED
   734                           preinc0	equ	0xFEC
   735                           plusw0	equ	0xFEB
   736                           fsr0h	equ	0xFEA
   737                           fsr0l	equ	0xFE9
   738                           wreg	equ	0xFE8
   739                           indf1	equ	0xFE7
   740                           postinc1	equ	0xFE6
   741                           postdec1	equ	0xFE5
   742                           preinc1	equ	0xFE4
   743                           plusw1	equ	0xFE3
   744                           fsr1h	equ	0xFE2
   745                           fsr1l	equ	0xFE1
   746                           bsr	equ	0xFE0
   747                           indf2	equ	0xFDF
   748                           postinc2	equ	0xFDE
   749                           postdec2	equ	0xFDD
   750                           preinc2	equ	0xFDC
   751                           plusw2	equ	0xFDB
   752                           fsr2h	equ	0xFDA
   753                           fsr2l	equ	0xFD9
   754                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        35
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     38      73
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                39    39      0      15
                                              0 COMRAM    38    38      0
                            _rx_data
                          _uart_init
 ---------------------------------------------------------------------------------
 (1) _uart_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _rx_data                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _rx_data
   _uart_init

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      24        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     26      49       1       57.5%
BITBIGSFRhh         47      0       0      16        0.0%
BITBIGSFRlhh         C      0       0      18        0.0%
BITBIGSFRlhl         9      0       0      19        0.0%
BITBIGSFRllhh        8      0       0      20        0.0%
BITBIGSFRllhl        8      0       0      21        0.0%
BITBIGSFRhlh         7      0       0      17        0.0%
BITBIGSFRlll         1      0       0      22        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      49      23        0.0%
DATA                 0      0      49       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu Dec 15 15:18:06 2022

                     l27 6EA4                       l36 6E72                       l38 6E80  
                     l39 6E84                       l66 6F86                       u20 6E80  
                     u21 6E7C                       u41 6F02                       u51 6F14  
                    l801 6F62                      l811 6F7C                      l803 6F68  
                    l813 6F80                      l805 6F6C                      l751 6EA2  
                    l807 6F72                      l815 6F8C                      l745 6E86  
                    l825 6FA6                      l809 6F76                      l747 6E94  
                    l771 6EF4                      l757 6E72                      l749 6EA0  
                    l781 6F2E                      l773 6EF8                      l759 6E82  
                    l791 6F4A                      l783 6F36                      l775 6F0A  
                    l793 6F4E                      l785 6F3A                      l777 6F20  
                    l795 6F54                      l787 6F40                      l779 6F24  
                    l797 6F58                      l789 6F44                      l799 6F5E  
                    wreg 000FE8                     _main 6EF4                     fsr1l 000FE1  
                   start 0000             ___param_bank 000000                    ?_main 0001  
                  _RCREG 000FAE                    _SPBRG 000FAF                    _PORTB 000F81  
                  _TRISB 000F93                    _TXREG 000FAD                    tablat 000FF5  
        __end_of_rx_data 6E86                    plusw1 000FE3                    plusw2 000FDB  
                  status 000FD8          __initialization 6ECA             __end_of_main 7000  
                 ??_main 0001            __activetblptr 000002        main@received_data 0026  
                 _SPBRGH 000FB0                   isa$std 000001             __pdataCOMRAM 0027  
                 tblptrh 000FF7                   tblptrl 000FF6                   tblptru 000FF8  
              ??_rx_data 0001               __accesstop 0080  __end_of__initialization 6EEA  
          ___rparam_used 000001           __pcstackCOMRAM 0001                  _BAUDCON 000FB8  
                __Hparam 0000                  __Lparam 0000                  __pcinit 6ECA  
                __ramtop 0600                  __ptext0 6EF4                  __ptext1 6E86  
                __ptext2 6E72                  _rx_data 6E72     end_of_initialization 6EEA  
          __Lmediumconst 0000        __end_of_uart_init 6EA6                _RCSTAbits 000FAB  
                postdec1 000FE5                  postinc0 000FEE                _TRISCbits 000F94  
              _TXSTAbits 000FAC            __pidataCOMRAM 6EA7      start_initialization 6ECA  
               ?_rx_data 0001                 _LATBbits 000F8A                 _PIR1bits 000F9E  
              main@F2576 0027                main@F2578 0039                _uart_init 6E86  
              copy_data0 6EDE                 __Hrparam 0000                 __Lrparam 0000  
             ?_uart_init 0001                 isa$xinst 000000                 main@msg1 0003  
               main@msg2 0015              ??_uart_init 0001  
